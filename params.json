{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Drone","tagline":"Code for messing with an AR drone","body":"This is a collection of utilities related to the AR drone\r\n\r\n## Augmentation\r\n\r\ndrone augmentation can be found in lib/droner.coffee\r\n\r\n#### events\r\n\r\nAdds landed, landing, hovering, flying, batteryChange, and altitudeChange events to the drone. Being pulled into ar-drone core so will be removed\r\n\r\n#### batteryLevel(cb)\r\n\r\nreturns battery level to callback\r\n\r\n#### safeguard\r\n\r\ndisables emergency mode on start and adds error handles to prevent your app from crashing and having your drone fly off into space\r\n\r\n#### record(loc)\r\n\r\nRecords raw video data to location (HD with higher framerate)\r\n\r\nYou'll need to run ```ffmpeg -i recording.h264 -vcodec copy recording.mp4``` to convert it into an mp4. record will append video to your existing one so you can keep a log of your drone's entire history easily\r\n\r\n#### enableControls(speed=0.5)\r\n\r\nAdds controls via stdin to the drone - look below for these\r\n\r\n#### enableFacialRecognition\r\n\r\nAdds a processing step to PNG frames for running facial recognition. drone.faces will emit a data event with a PNG buffer that has circles drawn around faces\r\n\r\n\r\n## Controller\r\n\r\nDepends on opencv for facial recognition\r\n\r\nRun ```coffee face.coffee``` to control the drone from the command line with WASD\r\n\r\nControls:\r\n\r\n```\r\nw - forward\r\na - left\r\ns - backward\r\nd - right\r\n\r\narrow up - up\r\narrow left - spin left\r\narrow down - down\r\narrow right - spin right\r\n\r\n<space> - land/takeoff\r\nx - hover\r\nr - disable emergency mode\r\n1/2 - flipAhead/flipLeft\r\n```\r\n\r\nYou can view the camera from localhost:8080\r\n\r\n\r\n## Installing node on the drone\r\n\r\n(thanks felixge for doing the hard parts on this)\r\n\r\nRun this command while connected to the drone's network\r\n\r\n```\r\nnpm run-script deploy\r\n```\r\n\r\n### REPL\r\n\r\nDo you want your drone to control itself? Install ar-drone on it with\r\n\r\n```\r\nnpm run-script setup\r\n```\r\n\r\nNow you can go into ```/data/video/labs``` where you have ar-drone and a repl.js to launch a repl. Run ```node repl.js``` and you're on your way. You can write any ar-drone scripts and run them from the drone itself now.\r\n\r\n\r\nNow you can telnet into the drone and type ```node``` to run the repl","google":""}